@model IEnumerable<NutritionWatcher.Models.CalorieViewModel>
@{
    ViewBag.Title = "CalorieConsumption";

}

<div>
    @* -- Napi -- *@
    <div>
        <h4>A mai napon bevitt kalória</h4>
        @if (Model.Any(x => x.Consumption.Date == DateTime.Today.ToString("yyyy-MM-dd"))) {
            <table>
                <tr>
                    <th>Idő</th>
                    <th>Bevitt kalória</th>
                </tr>
                @foreach (NutritionWatcher.Models.CalorieViewModel cvm in Model)
                {
                    if (cvm.Consumption.Date == DateTime.Today.ToString("yyyy-MM-dd"))
                    {
                        <tr>
                            <td>@cvm.Consumption.Time</td>
                            <td>@cvm.GetConsumedCalorie()</td>
                        </tr>
                    }
                }
            </table>
            <h5>Összesen bevitt kalória: @Model.ToList().FindAll(x => x.Consumption.Date == DateTime.Today.ToString("yyyy-MM-dd")).AsQueryable().Sum(x => x.GetConsumedCalorie())</h5>
        }
        else
        {
            <h5>A mai napon még nem rögzítettél fogyasztást!</h5>
        }
    </div>
    @* -- Heti -- *@
    <div>
        <h4>Az elmúlt héten bevitt kalória</h4>
        @if (Model.Any(x => x.IsThisWeek()))
        {
            <table>
                <tr>
                    <th>Nap</th>
                    <th>Bevitt kalória</th>
                </tr>
                @foreach (var cvm in Model.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().GroupBy(x => x.Consumption.Date))
                {
                    <tr>
                        <td>@cvm.Key</td>
                        <td>@cvm.Sum(x => x.GetConsumedCalorie())</td>
                    </tr>
                }
            </table>
            <h5>Összesen bevitt kalória: @Model.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().Sum(x => x.GetConsumedCalorie())</h5>
            <h5>Átlagosan bevitt kalória: @Model.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().Average(x => x.GetConsumedCalorie())</h5>
        }
        else
        {
            <h5>Ezen a héten még nem rögzítettél fogyasztást!</h5>
        }
    </div>
    @* -- Havi -- *@
    <div>
        <h4>Az elmúlt hónapban bevitt kalória</h4>
        @if (Model.Any(x => x.IsThisMonth()))
        {
            <table>
                <tr>
                    <th>Nap</th>
                    <th>Bevitt kalória</th>
                </tr>
                @foreach (var cvm in Model.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().GroupBy(x => x.Consumption.Date))
                {
                    <tr>
                        <td>@cvm.Key</td>
                        <td>@cvm.Sum(x => x.GetConsumedCalorie())</td>
                    </tr>
                }
            </table>
            <h5>Összesen bevitt kalória: @Model.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().Sum(x => x.GetConsumedCalorie())</h5>
            <h5>Átlagosan bevitt kalória: @Model.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().Average(x => x.GetConsumedCalorie())</h5>

        }
        else
        {
            <h5>Ebben a hónapban még nem rögzítettél fogyasztást!</h5>
        }
    </div>
</div>

