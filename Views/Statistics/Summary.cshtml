@model NutritionWatcher.Models.SummaryViewModel
@{
    ViewBag.Title = "Summary";
}

<div class="container">
    <div class="group">
        @using (Html.BeginForm("SummaryByDate", "Statistics", FormMethod.Post))
        {
            <label>Összegzés egy megadott napra</label><br />
            <div class="flex">
                <select name="date" class="input" style="width: 50%;">
                    @foreach (var item in Model.ConsumptionModels.AsQueryable().GroupBy(x => x.Date))
                    {
                        <option value="@item.Key">@item.Key</option>
                    }
                </select>
                <input name="send" class="btn success" value="Szűrés" type="submit" style="width: 50%;"/>
            </div>
        }
    </div>
    @* -- Napi -- *@
    <div class="group table-group">
        @if (Model.ConsumptionModels.ToList().Any(x => x.Date.Equals(DateTime.Today.ToString("yyyy-MM-dd")))) {
        <h4>Napi összegzés</h4>
            <table class="table table-striped table-hover">
                <tr>
                    <th>Statisztikai adat</th>
                    <th>Összesítés</th>
                </tr>
                <tr>
                    <td>Kalóriafogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.Consumption.Date.Equals(DateTime.Today.ToString("yyyy-MM-dd"))).AsQueryable().Sum(x => x.GetConsumedCalorie())</td>
                </tr>
                <tr>
                    <td>Fehérjefogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.Consumption.Date.Equals(DateTime.Today.ToString("yyyy-MM-dd"))).AsQueryable().Sum(x => x.GetConsumedProtein())</td>
                </tr>
                <tr>
                    <td>Zsírfogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.Consumption.Date.Equals(DateTime.Today.ToString("yyyy-MM-dd"))).AsQueryable().Sum(x => x.GetConsumedFat())</td>
                </tr>
                <tr>
                    <td>Szénhidrátfogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.Consumption.Date.Equals(DateTime.Today.ToString("yyyy-MM-dd"))).AsQueryable().Sum(x => x.GetConsumedHydrocarbonate())</td>
                </tr>
                <tr>
                    <td>Étkezések száma</td>
                    <td>@Model.ConsumptionModels.ToList().FindAll(x => x.Date.Equals(DateTime.Today.ToString("yyyy-MM-dd"))).Count</td>
                </tr>
            </table>
        }
        else
        {
            <h5>A mai napon még nem rögzítettél fogyasztást</h5>
        }
    </div>
    @* -- Heti -- *@
    <div class="group table-group">
        @if (Model.ConsumptionModels.ToList().Any(x => x.IsThisWeek())) {
        <h4>Heti összegzés</h4>
            <table class="table table-striped table-hover">
                <tr>
                    <th>Statisztikai adat</th>
                    <th>Összesítés</th>
                    <th>Átlag</th>
                </tr>
                <tr>
                    <td>Kalóriafogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().Sum(x => x.GetConsumedCalorie())</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().Average(x => x.GetConsumedCalorie())</td>
                </tr>
                <tr>
                    <td>Fehérjefogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().Sum(x => x.GetConsumedProtein())</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().Average(x => x.GetConsumedProtein())</td>
                </tr>
                <tr>
                    <td>Zsírfogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().Sum(x => x.GetConsumedFat())</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().Average(x => x.GetConsumedFat())</td>
                </tr>
                <tr>
                    <td>Szénhidrátfogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().Sum(x => x.GetConsumedHydrocarbonate())</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().Average(x => x.GetConsumedHydrocarbonate())</td>
                </tr>
                <tr>
                    <td>Étkezések száma</td>
                    <td>@Model.ConsumptionModels.ToList().FindAll(x => x.IsThisWeek()).Count</td>
                    <td>@Model.ConsumptionModels.ToList().FindAll(x => x.IsThisWeek()).AsQueryable().GroupBy(x => x.Date).Average(x => x.Count())</td>
                </tr>
            </table>
        }
        else
        {
            <h5>Ezen a héten még nem rögzítettél fogyasztást</h5>
        }
    </div>
    @* -- Havi -- *@
    <div class="group table-group">
        @if (Model.ConsumptionModels.ToList().Any(x => x.IsThisMonth()))
        {
        <h4>Havi összegzés</h4>
            <table class="table table-striped table-hover">
                <tr>
                    <th>Statisztikai adat</th>
                    <th>Összesítés</th>
                    <th>Átlag</th>
                </tr>
                <tr>
                    <td>Kalóriafogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().Sum(x => x.GetConsumedCalorie())</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().Average(x => x.GetConsumedCalorie())</td>
                </tr>
                <tr>
                    <td>Fehérjefogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().Sum(x => x.GetConsumedProtein())</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().Average(x => x.GetConsumedProtein())</td>
                </tr>
                <tr>
                    <td>Zsírfogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().Sum(x => x.GetConsumedFat())</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().Average(x => x.GetConsumedFat())</td>
                </tr>
                <tr>
                    <td>Szénhidrátfogyasztás</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().Sum(x => x.GetConsumedHydrocarbonate())</td>
                    <td>@Model.CalorieViewModels.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().Average(x => x.GetConsumedHydrocarbonate())</td>
                </tr>
                <tr>
                    <td>Étkezések száma</td>
                    <td>@Model.ConsumptionModels.ToList().FindAll(x => x.IsThisMonth()).Count</td>
                    <td>@Model.ConsumptionModels.ToList().FindAll(x => x.IsThisMonth()).AsQueryable().GroupBy(x => x.Date).Average(x => x.Count())</td>
                </tr>
            </table>
        }
        else
        {
            <h5>Ebben a hónapban még nem rögzítettél fogyasztást</h5>
        }
    </div>
</div>

